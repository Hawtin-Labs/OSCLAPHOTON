name: Build

on:
  push:
    branches:
      - 'master'
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - { name: linux,       os: ubuntu-latest }
          - { name: windows,      os: windows-latest }
    name: Build
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all git history
        run: git fetch --force --prune --tags --unshallow

      - name: Install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl-dev libjack-dev libxcb1-dev libxcb-icccm4-dev libxcursor-dev libxkbcommon-dev libxcb-shape0-dev libxcb-xfixes0-dev libxcb-dri2-0-dev libx11-xcb-dev libasound2-dev

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Parse Version
        if: startsWith(github.ref, 'refs/tags/')
        uses: olegtarasov/get-tag@v2.1
        id: tag_version

      - name: Set Version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cargo install cargo-edit
          cargo set-version $GIT_TAG_NAME

      - name: Build
        run: cargo xtask bundle daw-out --release

      - name: Archive
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: daw-out-${{ matrix.name }}.zip
          directory: target/bundled/

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: daw-out-${{ matrix.name }}
          path: target/bundled/daw-out-${{ matrix.name }}.zip

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: publish
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            publish/daw-out-linux/daw-out-linux.zip
            publish/daw-out-windows/daw-out-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}